syntax = "proto3";

package user_service.pkg.pb;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "user-service/userpb";

// Core definition
message Buyer {
  uint64 user_id = 1;
  string name = 2 [(buf.validate.field).string.min_len = 1];
  string gender = 3;
  google.protobuf.Timestamp date_of_birth = 4;
  string phone = 5;
  string address = 6;
}
message Seller {
  uint64 id = 1;
  string name = 2;
  string bank_account = 3;
  string tax_code = 4;
  string description = 5;
  google.protobuf.Timestamp date_of_birth = 6;
  string phone = 7;
  string address = 8;
}

// For Buyer gRPC
message CreateBuyerRequest {
  Buyer buyer = 1;
}
message CreateBuyerResponse {
  string message = 1;
  bool success = 2;
}

message UpdateBuyerByUserIDRequest {
  Buyer buyer = 1;
}
message UpdateBuyerByUserIDResponse {
  string message = 1;
  bool success = 2;
}

message GetBuyerByUserIDRequest {
  uint64 user_id = 1;
}
message GetBuyerByUserIDResponse {
  Buyer buyer = 1;
  string message = 2;
  bool success = 3;
}

message DelBuyerByUserIDRequest {
  uint64 user_id = 1;
}
message DelBuyerByUserIDResponse {
  string message = 1;
  bool success = 2;
}

// For Seller gRPC
message CreateSellerRequest {
  Seller seller = 1;
  uint64 user_id = 2;
}
message CreateSellerResponse {
  string message = 1;
  bool success = 2;
}

message UpdateSellerByIDRequest {
  Seller seller = 1;
  uint64 UserID = 2;
}
message UpdateSellerByIDResponse {
  string message = 1;
  bool success = 2;
}

message GetSellerByIDRequest {
  uint64 user_id = 1;
}
message GetSellerByIDResponse {
  Seller seller = 1;
  string message = 2;
  bool success = 3;
}

message DelSellerByIDRequest {
  uint64 user_id = 1;
}
message DelSellerByIDResponse {
  string message = 1;
  bool success = 2;
}

service UserService {
  rpc CreateBuyer(CreateBuyerRequest) returns (CreateBuyerResponse);
  rpc UpdateBuyerByUserID(UpdateBuyerByUserIDRequest) returns (UpdateBuyerByUserIDResponse);
  rpc GetBuyerByUserID(GetBuyerByUserIDRequest) returns (GetBuyerByUserIDResponse);
  rpc DelBuyerByUserID(DelBuyerByUserIDRequest) returns (DelBuyerByUserIDResponse);

  rpc CreateSeller(CreateSellerRequest) returns (CreateSellerResponse);
  rpc UpdateSellerByID(UpdateSellerByIDRequest) returns (UpdateSellerByIDResponse);
  rpc GetSellerByID(GetSellerByIDRequest) returns (GetSellerByIDResponse);
  rpc DelSellerByID(DelSellerByIDRequest) returns (DelSellerByIDResponse);
}
